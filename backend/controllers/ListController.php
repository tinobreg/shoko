<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace backend\controllers;

use common\models\Date;
use common\models\ListFriday;
use yii\data\ActiveDataProvider;
use yii\web\Controller;
use yii\web\HttpException;
use yii\helpers\Url;
use yii\filters\AccessControl;
use dmstr\bootstrap\Tabs;

/**
 * ListController implements the CRUD actions for ListFriday model.
 */
class ListController extends Controller
{


    /**
     * @var boolean whether to enable CSRF validation for the actions in this controller.
     * CSRF validation is enabled only when both this property and [[Request::enableCsrfValidation]] are true.
     */
    public $enableCsrfValidation = false;


    /**
     * Lists all ListFriday models.
     * @return mixed
     */
    public function actionIndex($idDate = null)
    {
        if(empty($idDate)){
            $date = Date::findOne(['status'=>Date::STATUS_ACTIVE]);
        }else{
            $date = Date::findOne($idDate);
        }
        $dataProvider = new ActiveDataProvider([
            'query' => ListFriday::find()->where(['idUser'=>\Yii::$app->user->id, 'idDate'=>$date->primaryKey]),
        ]);

        Tabs::clearLocalStorage();

        Url::remember();
        \Yii::$app->session['__crudReturnUrl'] = null;

        return $this->render('index', [
            'dataProvider' => $dataProvider,
            'date'=>$date,
        ]);
    }

    /**
     * Updates an existing ListFriday model.
     * If update is successful, the browser will be redirected to the 'view' page.
     * @param integer $idListFriday
     * @return mixed
     */
    public function actionUpdate($idListFriday)
    {
        $model = $this->findModel($idListFriday);
        $model->birthday = date('d M Y', $model->birthday);

        if ($model->load($_POST)){
            $model->birthday = strtotime($model->birthday);
            if($model->save()){
                return $this->redirect(['list/index']);
            }

        }
        return $this->render('update', [
            'model' => $model,
        ]);
    }

    /**
     * Deletes an existing ListFriday model.
     * If deletion is successful, the browser will be redirected to the 'index' page.
     * @param integer $idListFriday
     * @return mixed
     */
    public function actionDelete($idListFriday)
    {
        try {
            $this->findModel($idListFriday)->delete();
        } catch (\Exception $e) {
            $msg = (isset($e->errorInfo[2]))?$e->errorInfo[2]:$e->getMessage();
            \Yii::$app->getSession()->addFlash('error', $msg);
            return $this->redirect(Url::previous());
        }

// TODO: improve detection
        $isPivot = strstr('$idListFriday',',');
        if ($isPivot == true) {
            return $this->redirect(Url::previous());
        } elseif (isset(\Yii::$app->session['__crudReturnUrl']) && \Yii::$app->session['__crudReturnUrl'] != '/') {
            Url::remember(null);
            $url = \Yii::$app->session['__crudReturnUrl'];
            \Yii::$app->session['__crudReturnUrl'] = null;

            return $this->redirect($url);
        } else {
            return $this->redirect(['index']);
        }
    }

    /**
     * Finds the ListFriday model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     * @param integer $idListFriday
     * @return ListFriday the loaded model
     * @throws HttpException if the model cannot be found
     */
    protected function findModel($idListFriday)
    {
        if (($model = ListFriday::findOne($idListFriday)) !== null) {
            return $model;
        } else {
            throw new HttpException(404, 'The requested page does not exist.');
        }
    }
}
